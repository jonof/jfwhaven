# Witchaven Makefile for Microsoft Make

# Engine options
#  USE_POLYMOST   - enables Polymost renderer
#  USE_OPENGL     - enables OpenGL support in Polymost
#     Define as 0 to disable OpenGL
#     Define as 1 (or 2) for GL 2.0/2.1 profile
#     Define as 3 for GL 3.2 Core profile
#  USE_ASM        - enables the use of assembly code if supported
USE_POLYMOST=1
USE_OPENGL=1
USE_ASM=1

RELEASE=1

# Create Makefile.msvcuser yourself to provide your own overrides
# for configurable values
!if EXIST(Makefile.msvcuser)
!include Makefile.msvcuser
!endif

ENGINEROOT=jfbuild
ENGINEINC=$(ENGINEROOT)\include
SRC=src
RSRC=rsrc
LIBSMACKERSRC=libsmacker
AUDIOLIBROOT=jfaudiolib

CC=cl
RC=rc
LINK=link

OURCFLAGS=/nologo /MD /Zl
OURCXXFLAGS=/nologo /MD /Zl /EHsc
OURCPPFLAGS=/I$(SRC) /I$(ENGINEINC) /I$(AUDIOLIBROOT)\include /I$(LIBSMACKERSRC)
OURLINKFLAGS=/opt:ref /nologo
OURRFLAGS=/nologo /i$(SRC) /i$(ENGINEINC)
OURLIBS=msvcrt.lib

!if $(RELEASE)
# release options
OURCFLAGS=$(OURCFLAGS) /Ox
OURCXXFLAGS=$(OURCXXFLAGS) /Ox
OURLINKFLAGS=$(OURLINKFLAGS) /RELEASE
!else
# debugging options
OURCFLAGS=$(OURCFLAGS) /Ot /Z7
OURCXXFLAGS=$(OURXXCFLAGS) /Ot /Z7
OURLINKFLAGS=$(OURLINKFLAGS) /DEBUG
!endif

o=obj
res=res

!include $(ENGINEROOT)/Makefile.msvcshared

OURCFLAGS=$(OURCFLAGS) $(BUILDCFLAGS)
OURCXXFLAGS=$(OURCXXFLAGS) $(BUILDCXXFLAGS)
OURCPPFLAGS=$(OURCPPFLAGS) $(BUILDCPPFLAGS)
OURLIBS=$(OURLIBS) $(BUILDLIBS)
OURRFLAGS=$(OURRFLAGS) $(BUILDRFLAGS)

!include $(AUDIOLIBROOT)/Makefile.msvcshared

OURLINKFLAGS=$(OURLINKFLAGS) /LIBPATH:$(AUDIOLIBROOT)\third-party\msvc\lib$(PLATFORM)

GAMEOBJS= \
	$(SRC)\b5compat.$o \
	$(SRC)\config.$o \
	$(SRC)\whani.$o \
	$(SRC)\whaven.$o \
	$(SRC)\whfx.$o \
	$(SRC)\whinp.$o \
	$(SRC)\whmenu.$o \
	$(SRC)\whnet.$o \
	$(SRC)\whobj.$o \
	$(SRC)\whplr.$o \
	$(SRC)\whsmk.$o \
	$(SRC)\whsndmod.$o \
	$(SRC)\whtag.$o \
	$(SRC)\gameres.$(res) \
	$(SRC)\startwin_game.$o

GAMEOBJS=$(GAMEOBJS) \
	$(LIBSMACKERSRC)\smacker.$o \
	$(LIBSMACKERSRC)\smk_bitstream.$o \
	$(LIBSMACKERSRC)\smk_hufftree.$o

EDITOROBJS=$(SRC)\whbuild.$o \
	$(SRC)\buildres.$(res)

# Source-control version stamping
!if [git --version >nul] == 0
GAMEOBJS=$(GAMEOBJS) $(SRC)\version-auto.$o
EDITOROBJS=$(EDITOROBJS) $(SRC)\version-auto.$o
!else
GAMEOBJS=$(GAMEOBJS) $(SRC)\version.$o
EDITOROBJS=$(EDITOROBJS) $(SRC)\version.$o
!endif

# RULES
{$(SRC)}.c{$(SRC)}.$o:
	$(CC) /TC /c $(CPPFLAGS) $(OURCPPFLAGS) $(CFLAGS) $(OURCFLAGS) /Fo$@ $<

{$(SRC)}.rc{$(SRC)}.$(res):
	$(RC) $(OURRFLAGS) /fo$@ /r $<

{$(LIBSMACKERSRC)}.c{$(LIBSMACKERSRC)}.$o:
	$(CC) /TC /c $(CPPFLAGS) $(OURCPPFLAGS) $(CFLAGS) $(OURCFLAGS) /Fo$@ $<

# TARGETS
all: whaven$(EXESUFFIX) build$(EXESUFFIX) ;

whaven$(EXESUFFIX): $(GAMEOBJS) $(ENGINEROOT)\$(ENGINELIB) $(AUDIOLIBROOT)\$(JFAUDIOLIB)
	$(LINK) /OUT:$@ /SUBSYSTEM:WINDOWS $(LINKFLAGS) $(OURLINKFLAGS) $** $(JFAUDIOLIB_LINKFLAGS) $(OURLIBS)

build$(EXESUFFIX): $(EDITOROBJS) $(ENGINEROOT)\$(ENGINELIB) $(ENGINEROOT)\$(EDITORLIB)
	$(LINK) /OUT:$@ /SUBSYSTEM:WINDOWS $(LINKFLAGS) $(OURLINKFLAGS) $** $(OURLIBS)

$(ENGINEROOT)\$(ENGINELIB) $(ENGINEROOT)\$(EDITORLIB): ALWAYSBUILD
	cd "$(@D)"
	$(MAKE) /nologo /f Makefile.msvc /$(MAKEFLAGS) USE_POLYMOST=$(USE_POLYMOST) USE_OPENGL=$(USE_OPENGL) USE_ASM=$(USE_ASM) RELEASE=$(RELEASE) $(@F)
	cd "$(MAKEDIR)"

$(AUDIOLIBROOT)\$(JFAUDIOLIB): ALWAYSBUILD
	cd "$(@D)"
	$(MAKE) /nologo /f Makefile.msvc /$(MAKEFLAGS) RELEASE=$(RELEASE) $(@F)
	cd "$(MAKEDIR)"

$(SRC)\version-auto.c: ALWAYSBUILD
	cmd /c tools\generateversion.cmd > $@

ALWAYSBUILD: ;

# DEPENDENCIES
!include Makefile.deps

# PHONIES
clean::
	-del /q $(GAMEOBJS) $(EDITOROBJS)
veryclean:: clean
	-del /q whaven$(EXESUFFIX) build$(EXESUFFIX)

clean veryclean::
	cd "$(ENGINEROOT)"
	-$(MAKE) /nologo /f Makefile.msvc $@
	cd "$(MAKEDIR)"

clean::
	cd "$(AUDIOLIBROOT)"
	-$(MAKE) /nologo /f Makefile.msvc $@
	cd "$(MAKEDIR)"
